# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
    mutation: Mutation
}

interface Node {
    id: ID!
}

type Blog implements Node {
    created: DateTime!
    entries(cursor: String, limit: Int): EntryResponse
    entry(id: ID!): Entry
    handle: String!
    id: ID!
    name: String!
    updated: DateTime!
    user: User!
    userId: ID!
    foo: String!
}

type BlogResponse {
    nodes: [Blog]!
    pageInfo: PageInfo!
}

type Entry implements Node {
    content: String!
    created: DateTime!
    id: ID!
    title: String!
    updated: DateTime!
}

type EntryResponse {
    nodes: [Entry]!
    pageInfo: PageInfo!
}

type Mutation {
    createBlog(handle: String!, name: String!): Blog
    createEntry(blogId: ID!, content: String!, title: String!): Entry
    deleteBlog(id: ID!): Node
    deleteEntry(id: ID!): Node
    updateBlog(id: ID!, name: String!): Blog
    updateEntry(content: String!, id: ID!, title: String!): Entry
}

type PageInfo {
    cursor: String
    totalCount: Int!
}

type Query {
    blog(handle: String!): Blog
    blogForUser(userId: ID!): Blog
    blogs(cursor: String, limit: Int): BlogResponse
}

type User implements Node {
    created: DateTime!
    email: String!
    id: ID!
    picture: String
    updated: DateTime!
    username: String!
}

type UserResponse {
    nodes: [User]!
    pageInfo: PageInfo!
}

scalar DateTime
